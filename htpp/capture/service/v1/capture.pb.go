// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: apis/htpp/capture/service/v1/capture.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneRequest) Reset() {
	*x = ReadOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneRequest) ProtoMessage() {}

func (x *ReadOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneRequest.ProtoReflect.Descriptor instead.
func (*ReadOneRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{0}
}

func (x *ReadOneRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllRequest) Reset() {
	*x = ReadAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllRequest) ProtoMessage() {}

func (x *ReadAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllRequest.ProtoReflect.Descriptor instead.
func (*ReadAllRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{1}
}

type ReadOneWithBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneWithBinaryRequest) Reset() {
	*x = ReadOneWithBinaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneWithBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneWithBinaryRequest) ProtoMessage() {}

func (x *ReadOneWithBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneWithBinaryRequest.ProtoReflect.Descriptor instead.
func (*ReadOneWithBinaryRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{2}
}

func (x *ReadOneWithBinaryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadOneWithBinaryAndSrcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneWithBinaryAndSrcRequest) Reset() {
	*x = ReadOneWithBinaryAndSrcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneWithBinaryAndSrcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneWithBinaryAndSrcRequest) ProtoMessage() {}

func (x *ReadOneWithBinaryAndSrcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneWithBinaryAndSrcRequest.ProtoReflect.Descriptor instead.
func (*ReadOneWithBinaryAndSrcRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{3}
}

func (x *ReadOneWithBinaryAndSrcRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadAllWithBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllWithBinaryRequest) Reset() {
	*x = ReadAllWithBinaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllWithBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllWithBinaryRequest) ProtoMessage() {}

func (x *ReadAllWithBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllWithBinaryRequest.ProtoReflect.Descriptor instead.
func (*ReadAllWithBinaryRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{4}
}

type ReadAllWithBinaryAndSrcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllWithBinaryAndSrcRequest) Reset() {
	*x = ReadAllWithBinaryAndSrcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllWithBinaryAndSrcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllWithBinaryAndSrcRequest) ProtoMessage() {}

func (x *ReadAllWithBinaryAndSrcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllWithBinaryAndSrcRequest.ProtoReflect.Descriptor instead.
func (*ReadAllWithBinaryAndSrcRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{5}
}

type ReadOneWithBinaryAndCalAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneWithBinaryAndCalAreaRequest) Reset() {
	*x = ReadOneWithBinaryAndCalAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneWithBinaryAndCalAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneWithBinaryAndCalAreaRequest) ProtoMessage() {}

func (x *ReadOneWithBinaryAndCalAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneWithBinaryAndCalAreaRequest.ProtoReflect.Descriptor instead.
func (*ReadOneWithBinaryAndCalAreaRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{6}
}

func (x *ReadOneWithBinaryAndCalAreaRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadOneWithBinaryAndCalAreaAndSrcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneWithBinaryAndCalAreaAndSrcRequest) Reset() {
	*x = ReadOneWithBinaryAndCalAreaAndSrcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneWithBinaryAndCalAreaAndSrcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneWithBinaryAndCalAreaAndSrcRequest) ProtoMessage() {}

func (x *ReadOneWithBinaryAndCalAreaAndSrcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneWithBinaryAndCalAreaAndSrcRequest.ProtoReflect.Descriptor instead.
func (*ReadOneWithBinaryAndCalAreaAndSrcRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{7}
}

func (x *ReadOneWithBinaryAndCalAreaAndSrcRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadAllWithBinaryAndCalAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllWithBinaryAndCalAreaRequest) Reset() {
	*x = ReadAllWithBinaryAndCalAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllWithBinaryAndCalAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllWithBinaryAndCalAreaRequest) ProtoMessage() {}

func (x *ReadAllWithBinaryAndCalAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllWithBinaryAndCalAreaRequest.ProtoReflect.Descriptor instead.
func (*ReadAllWithBinaryAndCalAreaRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{8}
}

type ReadAllWithBinaryAndCalAreaAndSrcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllWithBinaryAndCalAreaAndSrcRequest) Reset() {
	*x = ReadAllWithBinaryAndCalAreaAndSrcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllWithBinaryAndCalAreaAndSrcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllWithBinaryAndCalAreaAndSrcRequest) ProtoMessage() {}

func (x *ReadAllWithBinaryAndCalAreaAndSrcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllWithBinaryAndCalAreaAndSrcRequest.ProtoReflect.Descriptor instead.
func (*ReadAllWithBinaryAndCalAreaAndSrcRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{9}
}

type ImageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ImageReply) Reset() {
	*x = ImageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageReply) ProtoMessage() {}

func (x *ImageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageReply.ProtoReflect.Descriptor instead.
func (*ImageReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{10}
}

func (x *ImageReply) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type ImageWithSrcReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSrc *ImageSrc `protobuf:"bytes,1,opt,name=image_src,json=imageSrc,proto3" json:"image_src,omitempty"`
}

func (x *ImageWithSrcReply) Reset() {
	*x = ImageWithSrcReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageWithSrcReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageWithSrcReply) ProtoMessage() {}

func (x *ImageWithSrcReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageWithSrcReply.ProtoReflect.Descriptor instead.
func (*ImageWithSrcReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{11}
}

func (x *ImageWithSrcReply) GetImageSrc() *ImageSrc {
	if x != nil {
		return x.ImageSrc
	}
	return nil
}

type ImagesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *ImagesReply) Reset() {
	*x = ImagesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesReply) ProtoMessage() {}

func (x *ImagesReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesReply.ProtoReflect.Descriptor instead.
func (*ImagesReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{12}
}

func (x *ImagesReply) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type ImagesWithSrcReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSrc []*ImageSrc `protobuf:"bytes,1,rep,name=image_src,json=imageSrc,proto3" json:"image_src,omitempty"`
}

func (x *ImagesWithSrcReply) Reset() {
	*x = ImagesWithSrcReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesWithSrcReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesWithSrcReply) ProtoMessage() {}

func (x *ImagesWithSrcReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesWithSrcReply.ProtoReflect.Descriptor instead.
func (*ImagesWithSrcReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{13}
}

func (x *ImagesWithSrcReply) GetImageSrc() []*ImageSrc {
	if x != nil {
		return x.ImageSrc
	}
	return nil
}

type ImageWithAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image  *Image  `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Pixels int64   `protobuf:"varint,2,opt,name=pixels,proto3" json:"pixels,omitempty"`
	Area   float64 `protobuf:"fixed64,3,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *ImageWithAreaReply) Reset() {
	*x = ImageWithAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageWithAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageWithAreaReply) ProtoMessage() {}

func (x *ImageWithAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageWithAreaReply.ProtoReflect.Descriptor instead.
func (*ImageWithAreaReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{14}
}

func (x *ImageWithAreaReply) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ImageWithAreaReply) GetPixels() int64 {
	if x != nil {
		return x.Pixels
	}
	return 0
}

func (x *ImageWithAreaReply) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

type ImageWithAreaAndSrcReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSrc *ImageSrc `protobuf:"bytes,1,opt,name=image_src,json=imageSrc,proto3" json:"image_src,omitempty"`
	Pixels   int64     `protobuf:"varint,2,opt,name=pixels,proto3" json:"pixels,omitempty"`
	Area     float64   `protobuf:"fixed64,3,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *ImageWithAreaAndSrcReply) Reset() {
	*x = ImageWithAreaAndSrcReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageWithAreaAndSrcReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageWithAreaAndSrcReply) ProtoMessage() {}

func (x *ImageWithAreaAndSrcReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageWithAreaAndSrcReply.ProtoReflect.Descriptor instead.
func (*ImageWithAreaAndSrcReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{15}
}

func (x *ImageWithAreaAndSrcReply) GetImageSrc() *ImageSrc {
	if x != nil {
		return x.ImageSrc
	}
	return nil
}

func (x *ImageWithAreaAndSrcReply) GetPixels() int64 {
	if x != nil {
		return x.Pixels
	}
	return 0
}

func (x *ImageWithAreaAndSrcReply) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

type ImagesWithAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ImagesWithAreaReply_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ImagesWithAreaReply) Reset() {
	*x = ImagesWithAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesWithAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesWithAreaReply) ProtoMessage() {}

func (x *ImagesWithAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesWithAreaReply.ProtoReflect.Descriptor instead.
func (*ImagesWithAreaReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{16}
}

func (x *ImagesWithAreaReply) GetData() []*ImagesWithAreaReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ImagesWithAreaAndSrcReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ImagesWithAreaAndSrcReply_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ImagesWithAreaAndSrcReply) Reset() {
	*x = ImagesWithAreaAndSrcReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesWithAreaAndSrcReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesWithAreaAndSrcReply) ProtoMessage() {}

func (x *ImagesWithAreaAndSrcReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesWithAreaAndSrcReply.ProtoReflect.Descriptor instead.
func (*ImagesWithAreaAndSrcReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{17}
}

func (x *ImagesWithAreaAndSrcReply) GetData() []*ImagesWithAreaAndSrcReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{18}
}

func (x *Image) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ImageSrc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proc []byte `protobuf:"bytes,1,opt,name=proc,proto3" json:"proc,omitempty"`
	Src  []byte `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
}

func (x *ImageSrc) Reset() {
	*x = ImageSrc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageSrc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSrc) ProtoMessage() {}

func (x *ImageSrc) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSrc.ProtoReflect.Descriptor instead.
func (*ImageSrc) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{19}
}

func (x *ImageSrc) GetProc() []byte {
	if x != nil {
		return x.Proc
	}
	return nil
}

func (x *ImageSrc) GetSrc() []byte {
	if x != nil {
		return x.Src
	}
	return nil
}

type ImagesWithAreaReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image  *Image  `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Pixels int64   `protobuf:"varint,2,opt,name=pixels,proto3" json:"pixels,omitempty"`
	Area   float64 `protobuf:"fixed64,3,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *ImagesWithAreaReply_Data) Reset() {
	*x = ImagesWithAreaReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesWithAreaReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesWithAreaReply_Data) ProtoMessage() {}

func (x *ImagesWithAreaReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesWithAreaReply_Data.ProtoReflect.Descriptor instead.
func (*ImagesWithAreaReply_Data) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ImagesWithAreaReply_Data) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ImagesWithAreaReply_Data) GetPixels() int64 {
	if x != nil {
		return x.Pixels
	}
	return 0
}

func (x *ImagesWithAreaReply_Data) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

type ImagesWithAreaAndSrcReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSrc *ImageSrc `protobuf:"bytes,1,opt,name=image_src,json=imageSrc,proto3" json:"image_src,omitempty"`
	Pixels   int64     `protobuf:"varint,2,opt,name=pixels,proto3" json:"pixels,omitempty"`
	Area     float64   `protobuf:"fixed64,3,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *ImagesWithAreaAndSrcReply_Data) Reset() {
	*x = ImagesWithAreaAndSrcReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesWithAreaAndSrcReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesWithAreaAndSrcReply_Data) ProtoMessage() {}

func (x *ImagesWithAreaAndSrcReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_capture_service_v1_capture_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesWithAreaAndSrcReply_Data.ProtoReflect.Descriptor instead.
func (*ImagesWithAreaAndSrcReply_Data) Descriptor() ([]byte, []int) {
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP(), []int{17, 0}
}

func (x *ImagesWithAreaAndSrcReply_Data) GetImageSrc() *ImageSrc {
	if x != nil {
		return x.ImageSrc
	}
	return nil
}

func (x *ImagesWithAreaAndSrcReply_Data) GetPixels() int64 {
	if x != nil {
		return x.Pixels
	}
	return 0
}

func (x *ImagesWithAreaAndSrcReply_Data) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

var File_apis_htpp_capture_service_v1_capture_proto protoreflect.FileDescriptor

var file_apis_htpp_capture_service_v1_capture_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x68, 0x74, 0x70, 0x70, 0x2f, 0x63, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x41,
	0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x22, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x28, 0x52,
	0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x52, 0x65, 0x61, 0x64, 0x41,
	0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43,
	0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a,
	0x28, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53,
	0x72, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x0a, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61,
	0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a,
	0x11, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x72, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x72, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x72, 0x63, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x72, 0x63, 0x22, 0x45, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x36, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x72, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3e, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x72, 0x63, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x72, 0x63, 0x22,
	0x76, 0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x72,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x72, 0x63, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x72, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x22, 0xc6, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61,
	0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x68, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61,
	0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x69, 0x78, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x19, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53,
	0x72, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e,
	0x64, 0x53, 0x72, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x72, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x72, 0x63, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x72, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x1b, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x72,
	0x63, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x70, 0x72, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x73, 0x72, 0x63, 0x32, 0xfc, 0x09, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x27,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x27, 0x2e, 0x68, 0x74, 0x70, 0x70,
	0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x11, 0x52, 0x65,
	0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12,
	0x31, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x17, 0x52, 0x65,
	0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41,
	0x6e, 0x64, 0x53, 0x72, 0x63, 0x12, 0x37, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x72, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x12, 0x31, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a,
	0x17, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x12, 0x37, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x72, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x89, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x3b, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f,
	0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43,
	0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a,
	0x21, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53,
	0x72, 0x63, 0x12, 0x41, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e,
	0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64,
	0x53, 0x72, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x1b, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x12, 0x3b, 0x2e, 0x68, 0x74, 0x70,
	0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64,
	0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x12, 0x41, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41,
	0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x41, 0x6e, 0x64, 0x53, 0x72, 0x63, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x1e, 0x50, 0x01, 0x5a, 0x1a, 0x68, 0x74, 0x70, 0x70,
	0x2f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apis_htpp_capture_service_v1_capture_proto_rawDescOnce sync.Once
	file_apis_htpp_capture_service_v1_capture_proto_rawDescData = file_apis_htpp_capture_service_v1_capture_proto_rawDesc
)

func file_apis_htpp_capture_service_v1_capture_proto_rawDescGZIP() []byte {
	file_apis_htpp_capture_service_v1_capture_proto_rawDescOnce.Do(func() {
		file_apis_htpp_capture_service_v1_capture_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_htpp_capture_service_v1_capture_proto_rawDescData)
	})
	return file_apis_htpp_capture_service_v1_capture_proto_rawDescData
}

var file_apis_htpp_capture_service_v1_capture_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_apis_htpp_capture_service_v1_capture_proto_goTypes = []interface{}{
	(*ReadOneRequest)(nil),                           // 0: htpp.capture.service.v1.ReadOneRequest
	(*ReadAllRequest)(nil),                           // 1: htpp.capture.service.v1.ReadAllRequest
	(*ReadOneWithBinaryRequest)(nil),                 // 2: htpp.capture.service.v1.ReadOneWithBinaryRequest
	(*ReadOneWithBinaryAndSrcRequest)(nil),           // 3: htpp.capture.service.v1.ReadOneWithBinaryAndSrcRequest
	(*ReadAllWithBinaryRequest)(nil),                 // 4: htpp.capture.service.v1.ReadAllWithBinaryRequest
	(*ReadAllWithBinaryAndSrcRequest)(nil),           // 5: htpp.capture.service.v1.ReadAllWithBinaryAndSrcRequest
	(*ReadOneWithBinaryAndCalAreaRequest)(nil),       // 6: htpp.capture.service.v1.ReadOneWithBinaryAndCalAreaRequest
	(*ReadOneWithBinaryAndCalAreaAndSrcRequest)(nil), // 7: htpp.capture.service.v1.ReadOneWithBinaryAndCalAreaAndSrcRequest
	(*ReadAllWithBinaryAndCalAreaRequest)(nil),       // 8: htpp.capture.service.v1.ReadAllWithBinaryAndCalAreaRequest
	(*ReadAllWithBinaryAndCalAreaAndSrcRequest)(nil), // 9: htpp.capture.service.v1.ReadAllWithBinaryAndCalAreaAndSrcRequest
	(*ImageReply)(nil),                               // 10: htpp.capture.service.v1.ImageReply
	(*ImageWithSrcReply)(nil),                        // 11: htpp.capture.service.v1.ImageWithSrcReply
	(*ImagesReply)(nil),                              // 12: htpp.capture.service.v1.ImagesReply
	(*ImagesWithSrcReply)(nil),                       // 13: htpp.capture.service.v1.ImagesWithSrcReply
	(*ImageWithAreaReply)(nil),                       // 14: htpp.capture.service.v1.ImageWithAreaReply
	(*ImageWithAreaAndSrcReply)(nil),                 // 15: htpp.capture.service.v1.ImageWithAreaAndSrcReply
	(*ImagesWithAreaReply)(nil),                      // 16: htpp.capture.service.v1.ImagesWithAreaReply
	(*ImagesWithAreaAndSrcReply)(nil),                // 17: htpp.capture.service.v1.ImagesWithAreaAndSrcReply
	(*Image)(nil),                                    // 18: htpp.capture.service.v1.Image
	(*ImageSrc)(nil),                                 // 19: htpp.capture.service.v1.ImageSrc
	(*ImagesWithAreaReply_Data)(nil),                 // 20: htpp.capture.service.v1.ImagesWithAreaReply.Data
	(*ImagesWithAreaAndSrcReply_Data)(nil),           // 21: htpp.capture.service.v1.ImagesWithAreaAndSrcReply.Data
}
var file_apis_htpp_capture_service_v1_capture_proto_depIdxs = []int32{
	18, // 0: htpp.capture.service.v1.ImageReply.image:type_name -> htpp.capture.service.v1.Image
	19, // 1: htpp.capture.service.v1.ImageWithSrcReply.image_src:type_name -> htpp.capture.service.v1.ImageSrc
	18, // 2: htpp.capture.service.v1.ImagesReply.images:type_name -> htpp.capture.service.v1.Image
	19, // 3: htpp.capture.service.v1.ImagesWithSrcReply.image_src:type_name -> htpp.capture.service.v1.ImageSrc
	18, // 4: htpp.capture.service.v1.ImageWithAreaReply.image:type_name -> htpp.capture.service.v1.Image
	19, // 5: htpp.capture.service.v1.ImageWithAreaAndSrcReply.image_src:type_name -> htpp.capture.service.v1.ImageSrc
	20, // 6: htpp.capture.service.v1.ImagesWithAreaReply.data:type_name -> htpp.capture.service.v1.ImagesWithAreaReply.Data
	21, // 7: htpp.capture.service.v1.ImagesWithAreaAndSrcReply.data:type_name -> htpp.capture.service.v1.ImagesWithAreaAndSrcReply.Data
	18, // 8: htpp.capture.service.v1.ImagesWithAreaReply.Data.image:type_name -> htpp.capture.service.v1.Image
	19, // 9: htpp.capture.service.v1.ImagesWithAreaAndSrcReply.Data.image_src:type_name -> htpp.capture.service.v1.ImageSrc
	0,  // 10: htpp.capture.service.v1.Capture.ReadOne:input_type -> htpp.capture.service.v1.ReadOneRequest
	1,  // 11: htpp.capture.service.v1.Capture.ReadAll:input_type -> htpp.capture.service.v1.ReadAllRequest
	2,  // 12: htpp.capture.service.v1.Capture.ReadOneWithBinary:input_type -> htpp.capture.service.v1.ReadOneWithBinaryRequest
	3,  // 13: htpp.capture.service.v1.Capture.ReadOneWithBinaryAndSrc:input_type -> htpp.capture.service.v1.ReadOneWithBinaryAndSrcRequest
	4,  // 14: htpp.capture.service.v1.Capture.ReadAllWithBinary:input_type -> htpp.capture.service.v1.ReadAllWithBinaryRequest
	5,  // 15: htpp.capture.service.v1.Capture.ReadAllWithBinaryAndSrc:input_type -> htpp.capture.service.v1.ReadAllWithBinaryAndSrcRequest
	6,  // 16: htpp.capture.service.v1.Capture.ReadOneWithBinaryAndCalArea:input_type -> htpp.capture.service.v1.ReadOneWithBinaryAndCalAreaRequest
	7,  // 17: htpp.capture.service.v1.Capture.ReadOneWithBinaryAndCalAreaAndSrc:input_type -> htpp.capture.service.v1.ReadOneWithBinaryAndCalAreaAndSrcRequest
	8,  // 18: htpp.capture.service.v1.Capture.ReadAllWithBinaryAndCalArea:input_type -> htpp.capture.service.v1.ReadAllWithBinaryAndCalAreaRequest
	9,  // 19: htpp.capture.service.v1.Capture.ReadAllWithBinaryAndCalAreaAndSrc:input_type -> htpp.capture.service.v1.ReadAllWithBinaryAndCalAreaAndSrcRequest
	10, // 20: htpp.capture.service.v1.Capture.ReadOne:output_type -> htpp.capture.service.v1.ImageReply
	12, // 21: htpp.capture.service.v1.Capture.ReadAll:output_type -> htpp.capture.service.v1.ImagesReply
	10, // 22: htpp.capture.service.v1.Capture.ReadOneWithBinary:output_type -> htpp.capture.service.v1.ImageReply
	11, // 23: htpp.capture.service.v1.Capture.ReadOneWithBinaryAndSrc:output_type -> htpp.capture.service.v1.ImageWithSrcReply
	12, // 24: htpp.capture.service.v1.Capture.ReadAllWithBinary:output_type -> htpp.capture.service.v1.ImagesReply
	13, // 25: htpp.capture.service.v1.Capture.ReadAllWithBinaryAndSrc:output_type -> htpp.capture.service.v1.ImagesWithSrcReply
	14, // 26: htpp.capture.service.v1.Capture.ReadOneWithBinaryAndCalArea:output_type -> htpp.capture.service.v1.ImageWithAreaReply
	15, // 27: htpp.capture.service.v1.Capture.ReadOneWithBinaryAndCalAreaAndSrc:output_type -> htpp.capture.service.v1.ImageWithAreaAndSrcReply
	16, // 28: htpp.capture.service.v1.Capture.ReadAllWithBinaryAndCalArea:output_type -> htpp.capture.service.v1.ImagesWithAreaReply
	17, // 29: htpp.capture.service.v1.Capture.ReadAllWithBinaryAndCalAreaAndSrc:output_type -> htpp.capture.service.v1.ImagesWithAreaAndSrcReply
	20, // [20:30] is the sub-list for method output_type
	10, // [10:20] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_apis_htpp_capture_service_v1_capture_proto_init() }
func file_apis_htpp_capture_service_v1_capture_proto_init() {
	if File_apis_htpp_capture_service_v1_capture_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneWithBinaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneWithBinaryAndSrcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllWithBinaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllWithBinaryAndSrcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneWithBinaryAndCalAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneWithBinaryAndCalAreaAndSrcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllWithBinaryAndCalAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllWithBinaryAndCalAreaAndSrcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageWithSrcReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesWithSrcReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageWithAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageWithAreaAndSrcReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesWithAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesWithAreaAndSrcReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageSrc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesWithAreaReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_capture_service_v1_capture_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesWithAreaAndSrcReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_htpp_capture_service_v1_capture_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_htpp_capture_service_v1_capture_proto_goTypes,
		DependencyIndexes: file_apis_htpp_capture_service_v1_capture_proto_depIdxs,
		MessageInfos:      file_apis_htpp_capture_service_v1_capture_proto_msgTypes,
	}.Build()
	File_apis_htpp_capture_service_v1_capture_proto = out.File
	file_apis_htpp_capture_service_v1_capture_proto_rawDesc = nil
	file_apis_htpp_capture_service_v1_capture_proto_goTypes = nil
	file_apis_htpp_capture_service_v1_capture_proto_depIdxs = nil
}
