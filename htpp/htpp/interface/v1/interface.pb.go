// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: apis/htpp/htpp/interface/v1/interface.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *LoginRequest_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUser() *LoginRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *RegisterRequest_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRequest) GetUser() *RegisterRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetCurrentUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCurrentUserRequest) Reset() {
	*x = GetCurrentUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserRequest) ProtoMessage() {}

func (x *GetCurrentUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentUserRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{2}
}

func (x *GetCurrentUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UpdateUserRequest_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateUserRequest) GetUser() *UpdateUserRequest_User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserReply_User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserReply) Reset() {
	*x = UserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReply) ProtoMessage() {}

func (x *UserReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReply.ProtoReflect.Descriptor instead.
func (*UserReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{4}
}

func (x *UserReply) GetUser() *UserReply_User {
	if x != nil {
		return x.User
	}
	return nil
}

type ReadOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneRequest) Reset() {
	*x = ReadOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneRequest) ProtoMessage() {}

func (x *ReadOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneRequest.ProtoReflect.Descriptor instead.
func (*ReadOneRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{5}
}

func (x *ReadOneRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllRequest) Reset() {
	*x = ReadAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllRequest) ProtoMessage() {}

func (x *ReadAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllRequest.ProtoReflect.Descriptor instead.
func (*ReadAllRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{6}
}

type ReadOneWithBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneWithBinaryRequest) Reset() {
	*x = ReadOneWithBinaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneWithBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneWithBinaryRequest) ProtoMessage() {}

func (x *ReadOneWithBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneWithBinaryRequest.ProtoReflect.Descriptor instead.
func (*ReadOneWithBinaryRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{7}
}

func (x *ReadOneWithBinaryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadAllWithBinaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllWithBinaryRequest) Reset() {
	*x = ReadAllWithBinaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllWithBinaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllWithBinaryRequest) ProtoMessage() {}

func (x *ReadAllWithBinaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllWithBinaryRequest.ProtoReflect.Descriptor instead.
func (*ReadAllWithBinaryRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{8}
}

type ReadOneWithBinaryAndCalAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadOneWithBinaryAndCalAreaRequest) Reset() {
	*x = ReadOneWithBinaryAndCalAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOneWithBinaryAndCalAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOneWithBinaryAndCalAreaRequest) ProtoMessage() {}

func (x *ReadOneWithBinaryAndCalAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOneWithBinaryAndCalAreaRequest.ProtoReflect.Descriptor instead.
func (*ReadOneWithBinaryAndCalAreaRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{9}
}

func (x *ReadOneWithBinaryAndCalAreaRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ReadAllWithBinaryAndCalAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllWithBinaryAndCalAreaRequest) Reset() {
	*x = ReadAllWithBinaryAndCalAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllWithBinaryAndCalAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllWithBinaryAndCalAreaRequest) ProtoMessage() {}

func (x *ReadAllWithBinaryAndCalAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllWithBinaryAndCalAreaRequest.ProtoReflect.Descriptor instead.
func (*ReadAllWithBinaryAndCalAreaRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{10}
}

type ImageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ImageReply) Reset() {
	*x = ImageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageReply) ProtoMessage() {}

func (x *ImageReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageReply.ProtoReflect.Descriptor instead.
func (*ImageReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{11}
}

func (x *ImageReply) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type ImagesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *ImagesReply) Reset() {
	*x = ImagesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesReply) ProtoMessage() {}

func (x *ImagesReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesReply.ProtoReflect.Descriptor instead.
func (*ImagesReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{12}
}

func (x *ImagesReply) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type ImageWithAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image  *Image  `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Pixels int64   `protobuf:"varint,2,opt,name=pixels,proto3" json:"pixels,omitempty"`
	Area   float64 `protobuf:"fixed64,3,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *ImageWithAreaReply) Reset() {
	*x = ImageWithAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageWithAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageWithAreaReply) ProtoMessage() {}

func (x *ImageWithAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageWithAreaReply.ProtoReflect.Descriptor instead.
func (*ImageWithAreaReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{13}
}

func (x *ImageWithAreaReply) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ImageWithAreaReply) GetPixels() int64 {
	if x != nil {
		return x.Pixels
	}
	return 0
}

func (x *ImageWithAreaReply) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

type ImagesWithAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ImagesWithAreaReply_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ImagesWithAreaReply) Reset() {
	*x = ImagesWithAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesWithAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesWithAreaReply) ProtoMessage() {}

func (x *ImagesWithAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesWithAreaReply.ProtoReflect.Descriptor instead.
func (*ImagesWithAreaReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{14}
}

func (x *ImagesWithAreaReply) GetData() []*ImagesWithAreaReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{15}
}

func (x *Image) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCurrentUserMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetCurrentUserMachinesRequest) Reset() {
	*x = GetCurrentUserMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentUserMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentUserMachinesRequest) ProtoMessage() {}

func (x *GetCurrentUserMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentUserMachinesRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentUserMachinesRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{16}
}

func (x *GetCurrentUserMachinesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RegisterMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *MachineStruct `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *RegisterMachineRequest) Reset() {
	*x = RegisterMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMachineRequest) ProtoMessage() {}

func (x *RegisterMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMachineRequest.ProtoReflect.Descriptor instead.
func (*RegisterMachineRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{17}
}

func (x *RegisterMachineRequest) GetMachine() *MachineStruct {
	if x != nil {
		return x.Machine
	}
	return nil
}

type UpdateMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *MachineStruct `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *UpdateMachineRequest) Reset() {
	*x = UpdateMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineRequest) ProtoMessage() {}

func (x *UpdateMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineRequest.ProtoReflect.Descriptor instead.
func (*UpdateMachineRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateMachineRequest) GetMachine() *MachineStruct {
	if x != nil {
		return x.Machine
	}
	return nil
}

type GetMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *GetMachineRequest) Reset() {
	*x = GetMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineRequest) ProtoMessage() {}

func (x *GetMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineRequest.ProtoReflect.Descriptor instead.
func (*GetMachineRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{19}
}

func (x *GetMachineRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type MachineReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *MachineStruct `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *MachineReply) Reset() {
	*x = MachineReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineReply) ProtoMessage() {}

func (x *MachineReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineReply.ProtoReflect.Descriptor instead.
func (*MachineReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{20}
}

func (x *MachineReply) GetMachine() *MachineStruct {
	if x != nil {
		return x.Machine
	}
	return nil
}

type MachinesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*MachineStruct `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *MachinesReply) Reset() {
	*x = MachinesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachinesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachinesReply) ProtoMessage() {}

func (x *MachinesReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachinesReply.ProtoReflect.Descriptor instead.
func (*MachinesReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{21}
}

func (x *MachinesReply) GetMachines() []*MachineStruct {
	if x != nil {
		return x.Machines
	}
	return nil
}

type MachineStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	UserId    int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Address   string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MachineStruct) Reset() {
	*x = MachineStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineStruct) ProtoMessage() {}

func (x *MachineStruct) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineStruct.ProtoReflect.Descriptor instead.
func (*MachineStruct) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{22}
}

func (x *MachineStruct) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *MachineStruct) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MachineStruct) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X         float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`                                // x
	Y         float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`                                // y
	Z         float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`                                // z
	Rx        float64 `protobuf:"fixed64,4,opt,name=rx,proto3" json:"rx,omitempty"`                              // 绕 x 角度
	Ry        float64 `protobuf:"fixed64,5,opt,name=ry,proto3" json:"ry,omitempty"`                              // 绕 y 角度
	Check     bool    `protobuf:"varint,6,opt,name=check,proto3" json:"check,omitempty"`                         // 是否为检查动作
	Delay     float64 `protobuf:"fixed64,7,opt,name=delay,proto3" json:"delay,omitempty"`                        // 每个动作的延时
	MachineId string  `protobuf:"bytes,8,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"` // 设备的唯一识别码
	CheckName string  `protobuf:"bytes,9,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"` // 检查动作名称
}

func (x *MoveRequest) Reset() {
	*x = MoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest) ProtoMessage() {}

func (x *MoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest.ProtoReflect.Descriptor instead.
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{23}
}

func (x *MoveRequest) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MoveRequest) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MoveRequest) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *MoveRequest) GetRx() float64 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *MoveRequest) GetRy() float64 {
	if x != nil {
		return x.Ry
	}
	return 0
}

func (x *MoveRequest) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *MoveRequest) GetDelay() float64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *MoveRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *MoveRequest) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

type MoveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MoveReply) Reset() {
	*x = MoveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveReply) ProtoMessage() {}

func (x *MoveReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveReply.ProtoReflect.Descriptor instead.
func (*MoveReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{24}
}

func (x *MoveReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ZeroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Empty     *emptypb.Empty `protobuf:"bytes,1,opt,name=empty,proto3" json:"empty,omitempty"`
	MachineId string         `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *ZeroRequest) Reset() {
	*x = ZeroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZeroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZeroRequest) ProtoMessage() {}

func (x *ZeroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZeroRequest.ProtoReflect.Descriptor instead.
func (*ZeroRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{25}
}

func (x *ZeroRequest) GetEmpty() *emptypb.Empty {
	if x != nil {
		return x.Empty
	}
	return nil
}

func (x *ZeroRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type ZeroReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ZeroReply) Reset() {
	*x = ZeroReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZeroReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZeroReply) ProtoMessage() {}

func (x *ZeroReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZeroReply.ProtoReflect.Descriptor instead.
func (*ZeroReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{26}
}

func (x *ZeroReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// 请求电机运行信息
type GetMotorStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *GetMotorStatusRequest) Reset() {
	*x = GetMotorStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMotorStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMotorStatusRequest) ProtoMessage() {}

func (x *GetMotorStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMotorStatusRequest.ProtoReflect.Descriptor instead.
func (*GetMotorStatusRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{27}
}

func (x *GetMotorStatusRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

// 响应电机运行信息
type GetMotorStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MotorInfo []*MotorInfo `protobuf:"bytes,1,rep,name=motor_info,json=motorInfo,proto3" json:"motor_info,omitempty"`
}

func (x *GetMotorStatusReply) Reset() {
	*x = GetMotorStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMotorStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMotorStatusReply) ProtoMessage() {}

func (x *GetMotorStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMotorStatusReply.ProtoReflect.Descriptor instead.
func (*GetMotorStatusReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{28}
}

func (x *GetMotorStatusReply) GetMotorInfo() []*MotorInfo {
	if x != nil {
		return x.MotorInfo
	}
	return nil
}

// 电机运行信息
type MotorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MotorStatus *MotorStatus `protobuf:"bytes,1,opt,name=motor_status,json=motorStatus,proto3" json:"motor_status,omitempty"` // 状态监控
	InstrPos    int64        `protobuf:"varint,2,opt,name=instr_pos,json=instrPos,proto3" json:"instr_pos,omitempty"`         // 命令位置
	CurrentPos  int64        `protobuf:"varint,3,opt,name=current_pos,json=currentPos,proto3" json:"current_pos,omitempty"`   // 实际位置
}

func (x *MotorInfo) Reset() {
	*x = MotorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotorInfo) ProtoMessage() {}

func (x *MotorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotorInfo.ProtoReflect.Descriptor instead.
func (*MotorInfo) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{29}
}

func (x *MotorInfo) GetMotorStatus() *MotorStatus {
	if x != nil {
		return x.MotorStatus
	}
	return nil
}

func (x *MotorInfo) GetInstrPos() int64 {
	if x != nil {
		return x.InstrPos
	}
	return 0
}

func (x *MotorInfo) GetCurrentPos() int64 {
	if x != nil {
		return x.CurrentPos
	}
	return 0
}

// 电机状态监控
type MotorStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fault                 bool `protobuf:"varint,1,opt,name=fault,proto3" json:"fault,omitempty"`                                                              // 故障
	Enabling              bool `protobuf:"varint,2,opt,name=enabling,proto3" json:"enabling,omitempty"`                                                        // 使能
	Running               bool `protobuf:"varint,3,opt,name=running,proto3" json:"running,omitempty"`                                                          // 运行
	InstructionCompletion bool `protobuf:"varint,4,opt,name=instruction_completion,json=instructionCompletion,proto3" json:"instruction_completion,omitempty"` // 指令完成
	PathCompletion        bool `protobuf:"varint,5,opt,name=path_completion,json=pathCompletion,proto3" json:"path_completion,omitempty"`                      // 路径完成
	ZeroCompletion        bool `protobuf:"varint,6,opt,name=zero_completion,json=zeroCompletion,proto3" json:"zero_completion,omitempty"`                      // 回零完成
}

func (x *MotorStatus) Reset() {
	*x = MotorStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotorStatus) ProtoMessage() {}

func (x *MotorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotorStatus.ProtoReflect.Descriptor instead.
func (*MotorStatus) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{30}
}

func (x *MotorStatus) GetFault() bool {
	if x != nil {
		return x.Fault
	}
	return false
}

func (x *MotorStatus) GetEnabling() bool {
	if x != nil {
		return x.Enabling
	}
	return false
}

func (x *MotorStatus) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *MotorStatus) GetInstructionCompletion() bool {
	if x != nil {
		return x.InstructionCompletion
	}
	return false
}

func (x *MotorStatus) GetPathCompletion() bool {
	if x != nil {
		return x.PathCompletion
	}
	return false
}

func (x *MotorStatus) GetZeroCompletion() bool {
	if x != nil {
		return x.ZeroCompletion
	}
	return false
}

type CreateCronJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CronJob *CronJob `protobuf:"bytes,1,opt,name=cron_job,json=cronJob,proto3" json:"cron_job,omitempty"`
}

func (x *CreateCronJobRequest) Reset() {
	*x = CreateCronJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCronJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCronJobRequest) ProtoMessage() {}

func (x *CreateCronJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCronJobRequest.ProtoReflect.Descriptor instead.
func (*CreateCronJobRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{31}
}

func (x *CreateCronJobRequest) GetCronJob() *CronJob {
	if x != nil {
		return x.CronJob
	}
	return nil
}

type DeleteCronJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCronJobRequest) Reset() {
	*x = DeleteCronJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCronJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCronJobRequest) ProtoMessage() {}

func (x *DeleteCronJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCronJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteCronJobRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteCronJobRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCronJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *DeleteCronJobReply) Reset() {
	*x = DeleteCronJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCronJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCronJobReply) ProtoMessage() {}

func (x *DeleteCronJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCronJobReply.ProtoReflect.Descriptor instead.
func (*DeleteCronJobReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteCronJobReply) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ListCronJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *ListCronJobRequest) Reset() {
	*x = ListCronJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCronJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCronJobRequest) ProtoMessage() {}

func (x *ListCronJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCronJobRequest.ProtoReflect.Descriptor instead.
func (*ListCronJobRequest) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{34}
}

func (x *ListCronJobRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type CronJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CronJob *CronJob `protobuf:"bytes,1,opt,name=cron_job,json=cronJob,proto3" json:"cron_job,omitempty"`
}

func (x *CronJobReply) Reset() {
	*x = CronJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJobReply) ProtoMessage() {}

func (x *CronJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronJobReply.ProtoReflect.Descriptor instead.
func (*CronJobReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{35}
}

func (x *CronJobReply) GetCronJob() *CronJob {
	if x != nil {
		return x.CronJob
	}
	return nil
}

type CronJobsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CronJobs []*CronJob `protobuf:"bytes,1,rep,name=cron_jobs,json=cronJobs,proto3" json:"cron_jobs,omitempty"`
}

func (x *CronJobsReply) Reset() {
	*x = CronJobsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronJobsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJobsReply) ProtoMessage() {}

func (x *CronJobsReply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronJobsReply.ProtoReflect.Descriptor instead.
func (*CronJobsReply) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{36}
}

func (x *CronJobsReply) GetCronJobs() []*CronJob {
	if x != nil {
		return x.CronJobs
	}
	return nil
}

type CronJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MachineId        string             `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	CheckName        string             `protobuf:"bytes,3,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"`
	CronString       string             `protobuf:"bytes,4,opt,name=cron_string,json=cronString,proto3" json:"cron_string,omitempty"`
	CheckCoordinates []*CheckCoordinate `protobuf:"bytes,5,rep,name=check_coordinates,json=checkCoordinates,proto3" json:"check_coordinates,omitempty"`
}

func (x *CronJob) Reset() {
	*x = CronJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronJob) ProtoMessage() {}

func (x *CronJob) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronJob.ProtoReflect.Descriptor instead.
func (*CronJob) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{37}
}

func (x *CronJob) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CronJob) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *CronJob) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

func (x *CronJob) GetCronString() string {
	if x != nil {
		return x.CronString
	}
	return ""
}

func (x *CronJob) GetCheckCoordinates() []*CheckCoordinate {
	if x != nil {
		return x.CheckCoordinates
	}
	return nil
}

type CheckCoordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq int64       `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Crd *Coordinate `protobuf:"bytes,2,opt,name=crd,proto3" json:"crd,omitempty"`
}

func (x *CheckCoordinate) Reset() {
	*x = CheckCoordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckCoordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckCoordinate) ProtoMessage() {}

func (x *CheckCoordinate) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckCoordinate.ProtoReflect.Descriptor instead.
func (*CheckCoordinate) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{38}
}

func (x *CheckCoordinate) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *CheckCoordinate) GetCrd() *Coordinate {
	if x != nil {
		return x.Crd
	}
	return nil
}

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X         float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`                                // x
	Y         float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`                                // y
	Z         float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`                                // z
	Rx        float64 `protobuf:"fixed64,4,opt,name=rx,proto3" json:"rx,omitempty"`                              // 绕 x 角度
	Ry        float64 `protobuf:"fixed64,5,opt,name=ry,proto3" json:"ry,omitempty"`                              // 绕 y 角度
	Check     bool    `protobuf:"varint,6,opt,name=check,proto3" json:"check,omitempty"`                         // 是否为检查动作
	Delay     float64 `protobuf:"fixed64,7,opt,name=delay,proto3" json:"delay,omitempty"`                        // 每个动作的延时
	MachineId string  `protobuf:"bytes,8,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"` // 设备的唯一识别码
	CheckName string  `protobuf:"bytes,9,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"` // 检查动作名称
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{39}
}

func (x *Coordinate) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Coordinate) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Coordinate) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Coordinate) GetRx() float64 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *Coordinate) GetRy() float64 {
	if x != nil {
		return x.Ry
	}
	return 0
}

func (x *Coordinate) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *Coordinate) GetDelay() float64 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *Coordinate) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *Coordinate) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

type LoginRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest_User) Reset() {
	*x = LoginRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest_User) ProtoMessage() {}

func (x *LoginRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest_User.ProtoReflect.Descriptor instead.
func (*LoginRequest_User) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LoginRequest_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RegisterRequest_User) Reset() {
	*x = RegisterRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest_User) ProtoMessage() {}

func (x *RegisterRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest_User.ProtoReflect.Descriptor instead.
func (*RegisterRequest_User) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{1, 0}
}

func (x *RegisterRequest_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterRequest_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UpdateUserRequest_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UpdateUserRequest_User) Reset() {
	*x = UpdateUserRequest_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest_User) ProtoMessage() {}

func (x *UpdateUserRequest_User) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest_User.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest_User) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{3, 0}
}

func (x *UpdateUserRequest_User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserRequest_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserRequest_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUserRequest_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserReply_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *UserReply_User) Reset() {
	*x = UserReply_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReply_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReply_User) ProtoMessage() {}

func (x *UserReply_User) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReply_User.ProtoReflect.Descriptor instead.
func (*UserReply_User) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{4, 0}
}

func (x *UserReply_User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserReply_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserReply_User) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserReply_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ImagesWithAreaReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image  *Image  `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Pixels int64   `protobuf:"varint,2,opt,name=pixels,proto3" json:"pixels,omitempty"`
	Area   float64 `protobuf:"fixed64,3,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *ImagesWithAreaReply_Data) Reset() {
	*x = ImagesWithAreaReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagesWithAreaReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagesWithAreaReply_Data) ProtoMessage() {}

func (x *ImagesWithAreaReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagesWithAreaReply_Data.ProtoReflect.Descriptor instead.
func (*ImagesWithAreaReply_Data) Descriptor() ([]byte, []int) {
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ImagesWithAreaReply_Data) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ImagesWithAreaReply_Data) GetPixels() int64 {
	if x != nil {
		return x.Pixels
	}
	return 0
}

func (x *ImagesWithAreaReply_Data) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

var File_apis_htpp_htpp_interface_v1_interface_proto protoreflect.FileDescriptor

var file_apis_htpp_htpp_interface_v1_interface_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x68, 0x74, 0x70, 0x70, 0x2f, 0x68, 0x74, 0x70, 0x70,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x87, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x1a, 0x38, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x1a, 0x54, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xbd, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x64, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0xa7, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x5e, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a,
	0x18, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x22, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x41, 0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x33, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x12, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x33, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x22, 0xc4, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72, 0x65, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x67, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x1b, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x59, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x74, 0x70,
	0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x57, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x52, 0x0a, 0x0d, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x08, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x0d,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xc1, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a, 0x0b, 0x5a, 0x65, 0x72, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x05,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x5a, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x0a, 0x6d, 0x6f, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x09, 0x4d,
	0x6f, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0c, 0x6d, 0x6f, 0x74, 0x6f,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0b, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x50, 0x6f, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x22, 0xe2,
	0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x69, 0x6e, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x16, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x61, 0x74, 0x68,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x7a, 0x65,
	0x72, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x7a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f,
	0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x63,
	0x72, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x07,
	0x63, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x26, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x33, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x0c,
	0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x08,
	0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52,
	0x07, 0x63, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x22, 0x4d, 0x0a, 0x0d, 0x43, 0x72, 0x6f, 0x6e,
	0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x63, 0x72, 0x6f,
	0x6e, 0x5f, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x08, 0x63,
	0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x07, 0x43, 0x72, 0x6f, 0x6e,
	0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x54, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x34, 0x0a,
	0x03, 0x63, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x74, 0x70,
	0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x03,
	0x63, 0x72, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c,
	0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x12, 0x0e, 0x0a, 0x02,
	0x72, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x78, 0x12, 0x0e, 0x0a, 0x02,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xd4, 0x14, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x24, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01,
	0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x6c, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x27,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x79, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x2d, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x68, 0x74, 0x70, 0x70,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a,
	0x01, 0x2a, 0x1a, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x07,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x26, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a,
	0x07, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x26, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0x30, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x86, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x30, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69,
	0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x12, 0xab, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x3a, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61,
	0x6c, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x12, 0xa7,
	0x01, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x12, 0x3a,
	0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x57,
	0x69, 0x74, 0x68, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x41,
	0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x74, 0x70,
	0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x41, 0x72,
	0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x62, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x12, 0x80, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2e, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x7b, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2c, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x74, 0x70,
	0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x1a, 0x0b, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x29, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x95, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x35, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x79, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x23, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x79,
	0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x23, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x5a, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x29,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x12, 0x96, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x74,
	0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22,
	0x12, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x7c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e,
	0x4a, 0x6f, 0x62, 0x12, 0x2c, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a,
	0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x73,
	0x12, 0x84, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a,
	0x6f, 0x62, 0x12, 0x2c, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x4a, 0x6f,
	0x62, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x83, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x12, 0x2a, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68,
	0x74, 0x70, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e, 0x68, 0x74, 0x70, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x6f,
	0x6e, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x73,
	0x2f, 0x7b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x1d, 0x50,
	0x01, 0x5a, 0x19, 0x68, 0x74, 0x70, 0x70, 0x2f, 0x68, 0x74, 0x70, 0x70, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apis_htpp_htpp_interface_v1_interface_proto_rawDescOnce sync.Once
	file_apis_htpp_htpp_interface_v1_interface_proto_rawDescData = file_apis_htpp_htpp_interface_v1_interface_proto_rawDesc
)

func file_apis_htpp_htpp_interface_v1_interface_proto_rawDescGZIP() []byte {
	file_apis_htpp_htpp_interface_v1_interface_proto_rawDescOnce.Do(func() {
		file_apis_htpp_htpp_interface_v1_interface_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_htpp_htpp_interface_v1_interface_proto_rawDescData)
	})
	return file_apis_htpp_htpp_interface_v1_interface_proto_rawDescData
}

var file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_apis_htpp_htpp_interface_v1_interface_proto_goTypes = []interface{}{
	(*LoginRequest)(nil),                       // 0: htpp.htpp.interface.v1.LoginRequest
	(*RegisterRequest)(nil),                    // 1: htpp.htpp.interface.v1.RegisterRequest
	(*GetCurrentUserRequest)(nil),              // 2: htpp.htpp.interface.v1.GetCurrentUserRequest
	(*UpdateUserRequest)(nil),                  // 3: htpp.htpp.interface.v1.UpdateUserRequest
	(*UserReply)(nil),                          // 4: htpp.htpp.interface.v1.UserReply
	(*ReadOneRequest)(nil),                     // 5: htpp.htpp.interface.v1.ReadOneRequest
	(*ReadAllRequest)(nil),                     // 6: htpp.htpp.interface.v1.ReadAllRequest
	(*ReadOneWithBinaryRequest)(nil),           // 7: htpp.htpp.interface.v1.ReadOneWithBinaryRequest
	(*ReadAllWithBinaryRequest)(nil),           // 8: htpp.htpp.interface.v1.ReadAllWithBinaryRequest
	(*ReadOneWithBinaryAndCalAreaRequest)(nil), // 9: htpp.htpp.interface.v1.ReadOneWithBinaryAndCalAreaRequest
	(*ReadAllWithBinaryAndCalAreaRequest)(nil), // 10: htpp.htpp.interface.v1.ReadAllWithBinaryAndCalAreaRequest
	(*ImageReply)(nil),                         // 11: htpp.htpp.interface.v1.ImageReply
	(*ImagesReply)(nil),                        // 12: htpp.htpp.interface.v1.ImagesReply
	(*ImageWithAreaReply)(nil),                 // 13: htpp.htpp.interface.v1.ImageWithAreaReply
	(*ImagesWithAreaReply)(nil),                // 14: htpp.htpp.interface.v1.ImagesWithAreaReply
	(*Image)(nil),                              // 15: htpp.htpp.interface.v1.Image
	(*GetCurrentUserMachinesRequest)(nil),      // 16: htpp.htpp.interface.v1.GetCurrentUserMachinesRequest
	(*RegisterMachineRequest)(nil),             // 17: htpp.htpp.interface.v1.RegisterMachineRequest
	(*UpdateMachineRequest)(nil),               // 18: htpp.htpp.interface.v1.UpdateMachineRequest
	(*GetMachineRequest)(nil),                  // 19: htpp.htpp.interface.v1.GetMachineRequest
	(*MachineReply)(nil),                       // 20: htpp.htpp.interface.v1.MachineReply
	(*MachinesReply)(nil),                      // 21: htpp.htpp.interface.v1.MachinesReply
	(*MachineStruct)(nil),                      // 22: htpp.htpp.interface.v1.MachineStruct
	(*MoveRequest)(nil),                        // 23: htpp.htpp.interface.v1.MoveRequest
	(*MoveReply)(nil),                          // 24: htpp.htpp.interface.v1.MoveReply
	(*ZeroRequest)(nil),                        // 25: htpp.htpp.interface.v1.ZeroRequest
	(*ZeroReply)(nil),                          // 26: htpp.htpp.interface.v1.ZeroReply
	(*GetMotorStatusRequest)(nil),              // 27: htpp.htpp.interface.v1.GetMotorStatusRequest
	(*GetMotorStatusReply)(nil),                // 28: htpp.htpp.interface.v1.GetMotorStatusReply
	(*MotorInfo)(nil),                          // 29: htpp.htpp.interface.v1.MotorInfo
	(*MotorStatus)(nil),                        // 30: htpp.htpp.interface.v1.MotorStatus
	(*CreateCronJobRequest)(nil),               // 31: htpp.htpp.interface.v1.CreateCronJobRequest
	(*DeleteCronJobRequest)(nil),               // 32: htpp.htpp.interface.v1.DeleteCronJobRequest
	(*DeleteCronJobReply)(nil),                 // 33: htpp.htpp.interface.v1.DeleteCronJobReply
	(*ListCronJobRequest)(nil),                 // 34: htpp.htpp.interface.v1.ListCronJobRequest
	(*CronJobReply)(nil),                       // 35: htpp.htpp.interface.v1.CronJobReply
	(*CronJobsReply)(nil),                      // 36: htpp.htpp.interface.v1.CronJobsReply
	(*CronJob)(nil),                            // 37: htpp.htpp.interface.v1.CronJob
	(*CheckCoordinate)(nil),                    // 38: htpp.htpp.interface.v1.CheckCoordinate
	(*Coordinate)(nil),                         // 39: htpp.htpp.interface.v1.Coordinate
	(*LoginRequest_User)(nil),                  // 40: htpp.htpp.interface.v1.LoginRequest.User
	(*RegisterRequest_User)(nil),               // 41: htpp.htpp.interface.v1.RegisterRequest.User
	(*UpdateUserRequest_User)(nil),             // 42: htpp.htpp.interface.v1.UpdateUserRequest.User
	(*UserReply_User)(nil),                     // 43: htpp.htpp.interface.v1.UserReply.User
	(*ImagesWithAreaReply_Data)(nil),           // 44: htpp.htpp.interface.v1.ImagesWithAreaReply.Data
	(*emptypb.Empty)(nil),                      // 45: google.protobuf.Empty
}
var file_apis_htpp_htpp_interface_v1_interface_proto_depIdxs = []int32{
	40, // 0: htpp.htpp.interface.v1.LoginRequest.user:type_name -> htpp.htpp.interface.v1.LoginRequest.User
	41, // 1: htpp.htpp.interface.v1.RegisterRequest.user:type_name -> htpp.htpp.interface.v1.RegisterRequest.User
	42, // 2: htpp.htpp.interface.v1.UpdateUserRequest.user:type_name -> htpp.htpp.interface.v1.UpdateUserRequest.User
	43, // 3: htpp.htpp.interface.v1.UserReply.user:type_name -> htpp.htpp.interface.v1.UserReply.User
	15, // 4: htpp.htpp.interface.v1.ImageReply.image:type_name -> htpp.htpp.interface.v1.Image
	15, // 5: htpp.htpp.interface.v1.ImagesReply.images:type_name -> htpp.htpp.interface.v1.Image
	15, // 6: htpp.htpp.interface.v1.ImageWithAreaReply.image:type_name -> htpp.htpp.interface.v1.Image
	44, // 7: htpp.htpp.interface.v1.ImagesWithAreaReply.data:type_name -> htpp.htpp.interface.v1.ImagesWithAreaReply.Data
	22, // 8: htpp.htpp.interface.v1.RegisterMachineRequest.machine:type_name -> htpp.htpp.interface.v1.MachineStruct
	22, // 9: htpp.htpp.interface.v1.UpdateMachineRequest.machine:type_name -> htpp.htpp.interface.v1.MachineStruct
	22, // 10: htpp.htpp.interface.v1.MachineReply.machine:type_name -> htpp.htpp.interface.v1.MachineStruct
	22, // 11: htpp.htpp.interface.v1.MachinesReply.machines:type_name -> htpp.htpp.interface.v1.MachineStruct
	45, // 12: htpp.htpp.interface.v1.ZeroRequest.empty:type_name -> google.protobuf.Empty
	29, // 13: htpp.htpp.interface.v1.GetMotorStatusReply.motor_info:type_name -> htpp.htpp.interface.v1.MotorInfo
	30, // 14: htpp.htpp.interface.v1.MotorInfo.motor_status:type_name -> htpp.htpp.interface.v1.MotorStatus
	37, // 15: htpp.htpp.interface.v1.CreateCronJobRequest.cron_job:type_name -> htpp.htpp.interface.v1.CronJob
	37, // 16: htpp.htpp.interface.v1.CronJobReply.cron_job:type_name -> htpp.htpp.interface.v1.CronJob
	37, // 17: htpp.htpp.interface.v1.CronJobsReply.cron_jobs:type_name -> htpp.htpp.interface.v1.CronJob
	38, // 18: htpp.htpp.interface.v1.CronJob.check_coordinates:type_name -> htpp.htpp.interface.v1.CheckCoordinate
	39, // 19: htpp.htpp.interface.v1.CheckCoordinate.crd:type_name -> htpp.htpp.interface.v1.Coordinate
	15, // 20: htpp.htpp.interface.v1.ImagesWithAreaReply.Data.image:type_name -> htpp.htpp.interface.v1.Image
	0,  // 21: htpp.htpp.interface.v1.Interface.Login:input_type -> htpp.htpp.interface.v1.LoginRequest
	1,  // 22: htpp.htpp.interface.v1.Interface.Register:input_type -> htpp.htpp.interface.v1.RegisterRequest
	2,  // 23: htpp.htpp.interface.v1.Interface.GetCurrentUser:input_type -> htpp.htpp.interface.v1.GetCurrentUserRequest
	3,  // 24: htpp.htpp.interface.v1.Interface.UpdateUser:input_type -> htpp.htpp.interface.v1.UpdateUserRequest
	5,  // 25: htpp.htpp.interface.v1.Interface.ReadOne:input_type -> htpp.htpp.interface.v1.ReadOneRequest
	6,  // 26: htpp.htpp.interface.v1.Interface.ReadAll:input_type -> htpp.htpp.interface.v1.ReadAllRequest
	7,  // 27: htpp.htpp.interface.v1.Interface.ReadOneWithBinary:input_type -> htpp.htpp.interface.v1.ReadOneWithBinaryRequest
	8,  // 28: htpp.htpp.interface.v1.Interface.ReadAllWithBinary:input_type -> htpp.htpp.interface.v1.ReadAllWithBinaryRequest
	9,  // 29: htpp.htpp.interface.v1.Interface.ReadOneWithBinaryAndCalArea:input_type -> htpp.htpp.interface.v1.ReadOneWithBinaryAndCalAreaRequest
	10, // 30: htpp.htpp.interface.v1.Interface.ReadAllWithBinaryAndCalArea:input_type -> htpp.htpp.interface.v1.ReadAllWithBinaryAndCalAreaRequest
	17, // 31: htpp.htpp.interface.v1.Interface.RegisterMachine:input_type -> htpp.htpp.interface.v1.RegisterMachineRequest
	18, // 32: htpp.htpp.interface.v1.Interface.UpdateMachine:input_type -> htpp.htpp.interface.v1.UpdateMachineRequest
	19, // 33: htpp.htpp.interface.v1.Interface.GetMachine:input_type -> htpp.htpp.interface.v1.GetMachineRequest
	16, // 34: htpp.htpp.interface.v1.Interface.GetCurrentUserMachines:input_type -> htpp.htpp.interface.v1.GetCurrentUserMachinesRequest
	23, // 35: htpp.htpp.interface.v1.Interface.Move:input_type -> htpp.htpp.interface.v1.MoveRequest
	25, // 36: htpp.htpp.interface.v1.Interface.Zero:input_type -> htpp.htpp.interface.v1.ZeroRequest
	27, // 37: htpp.htpp.interface.v1.Interface.GetMotorStatus:input_type -> htpp.htpp.interface.v1.GetMotorStatusRequest
	31, // 38: htpp.htpp.interface.v1.Interface.CreateCronJob:input_type -> htpp.htpp.interface.v1.CreateCronJobRequest
	32, // 39: htpp.htpp.interface.v1.Interface.DeleteCronJob:input_type -> htpp.htpp.interface.v1.DeleteCronJobRequest
	34, // 40: htpp.htpp.interface.v1.Interface.ListCronJob:input_type -> htpp.htpp.interface.v1.ListCronJobRequest
	4,  // 41: htpp.htpp.interface.v1.Interface.Login:output_type -> htpp.htpp.interface.v1.UserReply
	4,  // 42: htpp.htpp.interface.v1.Interface.Register:output_type -> htpp.htpp.interface.v1.UserReply
	4,  // 43: htpp.htpp.interface.v1.Interface.GetCurrentUser:output_type -> htpp.htpp.interface.v1.UserReply
	4,  // 44: htpp.htpp.interface.v1.Interface.UpdateUser:output_type -> htpp.htpp.interface.v1.UserReply
	11, // 45: htpp.htpp.interface.v1.Interface.ReadOne:output_type -> htpp.htpp.interface.v1.ImageReply
	12, // 46: htpp.htpp.interface.v1.Interface.ReadAll:output_type -> htpp.htpp.interface.v1.ImagesReply
	11, // 47: htpp.htpp.interface.v1.Interface.ReadOneWithBinary:output_type -> htpp.htpp.interface.v1.ImageReply
	12, // 48: htpp.htpp.interface.v1.Interface.ReadAllWithBinary:output_type -> htpp.htpp.interface.v1.ImagesReply
	13, // 49: htpp.htpp.interface.v1.Interface.ReadOneWithBinaryAndCalArea:output_type -> htpp.htpp.interface.v1.ImageWithAreaReply
	14, // 50: htpp.htpp.interface.v1.Interface.ReadAllWithBinaryAndCalArea:output_type -> htpp.htpp.interface.v1.ImagesWithAreaReply
	20, // 51: htpp.htpp.interface.v1.Interface.RegisterMachine:output_type -> htpp.htpp.interface.v1.MachineReply
	20, // 52: htpp.htpp.interface.v1.Interface.UpdateMachine:output_type -> htpp.htpp.interface.v1.MachineReply
	20, // 53: htpp.htpp.interface.v1.Interface.GetMachine:output_type -> htpp.htpp.interface.v1.MachineReply
	21, // 54: htpp.htpp.interface.v1.Interface.GetCurrentUserMachines:output_type -> htpp.htpp.interface.v1.MachinesReply
	24, // 55: htpp.htpp.interface.v1.Interface.Move:output_type -> htpp.htpp.interface.v1.MoveReply
	26, // 56: htpp.htpp.interface.v1.Interface.Zero:output_type -> htpp.htpp.interface.v1.ZeroReply
	28, // 57: htpp.htpp.interface.v1.Interface.GetMotorStatus:output_type -> htpp.htpp.interface.v1.GetMotorStatusReply
	35, // 58: htpp.htpp.interface.v1.Interface.CreateCronJob:output_type -> htpp.htpp.interface.v1.CronJobReply
	33, // 59: htpp.htpp.interface.v1.Interface.DeleteCronJob:output_type -> htpp.htpp.interface.v1.DeleteCronJobReply
	36, // 60: htpp.htpp.interface.v1.Interface.ListCronJob:output_type -> htpp.htpp.interface.v1.CronJobsReply
	41, // [41:61] is the sub-list for method output_type
	21, // [21:41] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_apis_htpp_htpp_interface_v1_interface_proto_init() }
func file_apis_htpp_htpp_interface_v1_interface_proto_init() {
	if File_apis_htpp_htpp_interface_v1_interface_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneWithBinaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllWithBinaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOneWithBinaryAndCalAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllWithBinaryAndCalAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageWithAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesWithAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentUserMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachinesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZeroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZeroReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMotorStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMotorStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotorStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCronJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCronJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCronJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCronJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronJobsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckCoordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReply_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagesWithAreaReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_htpp_htpp_interface_v1_interface_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apis_htpp_htpp_interface_v1_interface_proto_goTypes,
		DependencyIndexes: file_apis_htpp_htpp_interface_v1_interface_proto_depIdxs,
		MessageInfos:      file_apis_htpp_htpp_interface_v1_interface_proto_msgTypes,
	}.Build()
	File_apis_htpp_htpp_interface_v1_interface_proto = out.File
	file_apis_htpp_htpp_interface_v1_interface_proto_rawDesc = nil
	file_apis_htpp_htpp_interface_v1_interface_proto_goTypes = nil
	file_apis_htpp_htpp_interface_v1_interface_proto_depIdxs = nil
}
